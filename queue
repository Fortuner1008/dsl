#include <iostream>
#include <queue>
#include <string>
using namespace std;

class JobQueue {
private:
    queue<string> jobQueue;

public:
    void addJob(const string& job) {
        jobQueue.push(job);
        cout << "Job '" << job << "' added to the queue.\n";
    }

    void deleteJob() {
        if (jobQueue.empty()) {
            cout << "No jobs in the queue to delete.\n";
        } else {
            cout << "Job '" << jobQueue.front() << "' removed from the queue.\n";
            jobQueue.pop();
        }
    }

    void displayJobs() {
        if (jobQueue.empty()) {
            cout << "The job queue is empty.\n";
            return;
        }
        cout << "Current jobs in the queue:\n";
        queue<string> tempQueue = jobQueue;
        while (!tempQueue.empty()) {
            cout << "- " << tempQueue.front() << endl;
            tempQueue.pop();
        }
    }
};

int main() {
    JobQueue jq;
    int choice;
    string job;

    while (true) {
        cout << "\nJob Queue Menu:\n";
        cout << "1. Add Job\n";
        cout << "2. Delete Job\n";
        cout << "3. Display Jobs\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter job name to add: ";
                cin.ignore();
                getline(cin, job);
                jq.addJob(job);
                break;
            case 2:
                jq.deleteJob();
                break;
            case 3:
                jq.displayJobs();
                break;
            case 4:
                cout << "Exiting the program.\n";
                return 0;
            default:
                cout << "Invalid choice. Try again.\n";
        }
    }
}
